name: ml-terraform-gcp

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    paths:
    - 'infra/environments/dv/**'
    
#ensure that only a single job or workflow using the same concurrency group
concurrency: 
  group: ${{ github.action == 'ml-terraform-gcp' }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash
    working-directory: ./infra/environments/dv

jobs:
  terraform_plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name != 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@master
      
      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@master
        with:
          version: 'latest'
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      # Generates an execution plan for Terraform
      #- name: Terraform Format
      #  id: fmt
      #  run: terraform fmt -check


      - name: Terraform Init
        id: init
        run: terraform init


      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color


      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true


     

  terraform_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: terraform_plan
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    environment:
      name: tf_apply
    
    steps: 
    - name: Checkout
      uses: actions/checkout@master

    - name: Setup GCP Service Account
      uses: google-github-actions/setup-gcloud@master
      with:
        version: 'latest'
        service_account_email: ${{ secrets.GCP_SA_EMAIL }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
        
    # Provision resources via Terraform        
    - name: Terraform Apply
      run: terraform apply -auto-approve
